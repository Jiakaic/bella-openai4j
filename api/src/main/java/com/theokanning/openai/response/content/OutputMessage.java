package com.theokanning.openai.response.content;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.theokanning.openai.response.ItemStatus;
import com.theokanning.openai.response.MessageRole;
import com.theokanning.openai.response.ResponseItem;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;

/**
 * Messages generated by the model in response to input.
 *
 * @see <a href="https://platform.openai.com/docs/api-reference/response/create">Response API</a>
 */
@Data
@EqualsAndHashCode(callSuper = true)
@Builder
@AllArgsConstructor
@JsonInclude(JsonInclude.Include.NON_NULL)
public class OutputMessage extends ContentMessage implements ResponseItem {

    /**
     * Unique identifier (populated by API).
     */
    protected String id;

    /**
     * Status of the message (populated by API).
     */
    protected ItemStatus status;

    /**
     * Role is always assistant for output messages.
     */
    @Builder.Default
    private MessageRole role = MessageRole.ASSISTANT;

    /**
     * Message content. Can be string or array of output content items.
     */
    @JsonSerialize(using = OutputContentValue.OutputContentValueSerializer.class)
    @JsonDeserialize(using = OutputContentValue.OutputContentValueDeserializer.class)
    private OutputContentValue content;

    public OutputMessage() {
        super();
        this.role = MessageRole.ASSISTANT; // Output messages are always assistant
    }
}
